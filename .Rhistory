case_when(
transect == "W1-E1" ~ 0.10,
transect == "E2-W2" ~ 0.30,
transect == "W3-E3" ~ 0.50,
transect == "E4-W4" ~ 0.70,
transect == "E5-W5" ~ 0.90
),
TRUE ~ y  # Keep the existing 'y' value for other cases
)
)
emu_pen_2016_PI <- emu_pen_2016_PI %>%
left_join(most_frequent_lifeform, by = c("herbarium_determination" = "taxon_name"))
emu_pen_2016_PI %>%
drop_na(herbarium_determination) %>%
ggplot(aes(x = x, y = y, shape = family, color = most_common_lifeform)) +
geom_point() +
scale_shape_manual(values = c(1:19)) +
theme_fivethirtyeight() +
labs(y = 'West (m)', x = 'South (m)')
emu_pen_2016 <- get_ausplots('NSABHC0009-58026', veg.vouchers = T, veg.PI = T)
emu_pen_2016 <- get_ausplots('NSABHC0009-58026', veg.vouchers = T, veg.PI = T)
emu_pen_2016_PI <- emu_pen_2016$veg.PI
emu_pen_2016_PI <- emu_pen_2016_PI %>%
mutate(Direction = ifelse(substr(transect, 1, 1) %in% c('S', 'N'), "NS", "EW"))
emu_pen_2016_PI$x <- NA
emu_pen_2016_PI$y <- NA
emu_pen_2016_PI$y <- NA
emu_pen_2016_PI <- emu_pen_2016_PI %>%
mutate(
x = case_when(
Direction == 'EW' ~ point_number/100,
transect %in% c("S1-N1", "N2-S2", "S3-N3", "N4-S4", "S5-N5") ~
case_when(
transect == "S1-N1" ~ 0.10,
transect == "N2-S2" ~ 0.30,
transect == "S3-N3" ~ 0.50,
transect == "N4-S4" ~ 0.70,
transect == "S5-N5" ~ 0.90
),
TRUE ~ x  # Keep the existing 'x' value for other cases
),
y = case_when(
Direction == 'NS' ~ point_number/100,
transect %in% c("W1-E1", "E2-W2", "W3-E3", "E4-W4", "E5-W5") ~
case_when(
transect == "W1-E1" ~ 0.10,
transect == "E2-W2" ~ 0.30,
transect == "W3-E3" ~ 0.50,
transect == "E4-W4" ~ 0.70,
transect == "E5-W5" ~ 0.90
),
TRUE ~ y  # Keep the existing 'y' value for other cases
)
)
emu_pen_2016_PI <- emu_pen_2016_PI %>%
left_join(most_frequent_lifeform, by = c("herbarium_determination" = "taxon_name"))
emu_pen_2016_PI %>%
drop_na(herbarium_determination) %>%
ggplot(aes(x = x, y = y, shape = family, color = most_common_lifeform)) +
geom_point() +
scale_shape_manual(values = c(1:19)) +
theme_fivethirtyeight() +
labs(y = 'West (m)', x = 'South (m)')
ggsave('maps_graphs/emu_ausplot_2016_lf.png', width = 10, height = 10, dpi = 320)
color_palette <- c('annual' = 'red', 'perennial' = "purple", 'annual perennial' = "blue", 'annual short_lived_perennial' = "green")
emu_pen_2012_PI %>%
drop_na(herbarium_determination) %>%
ggplot(aes(x = x, y = y, shape = family, color = most_common_lifeform)) +
geom_point() +
scale_shape_manual(values = c(1:19)) +
scale_color_manual(values = color_palette) +
theme_fivethirtyeight() +
labs(y = 'West (m)', x = 'South (m)')
color_palette <- c('annual' = 'red', 'perennial' = "purple", 'annual perennial' = "lightblue", 'annual short_lived_perennial' = "green")
emu_pen_2012_PI %>%
drop_na(herbarium_determination) %>%
ggplot(aes(x = x, y = y, shape = family, color = most_common_lifeform)) +
geom_point() +
scale_shape_manual(values = c(1:19)) +
scale_color_manual(values = color_palette) +
theme_fivethirtyeight() +
labs(y = 'West (m)', x = 'South (m)')
color_palette <- c('annual' = 'red', 'perennial' = '#da42f5', 'annual perennial' = "skyblue", 'annual short_lived_perennial' = "green")
emu_pen_2012_PI %>%
drop_na(herbarium_determination) %>%
ggplot(aes(x = x, y = y, shape = family, color = most_common_lifeform)) +
geom_point() +
scale_shape_manual(values = c(1:19)) +
scale_color_manual(values = color_palette) +
theme_fivethirtyeight() +
labs(y = 'West (m)', x = 'South (m)')
color_palette <- c('annual' = 'red', 'perennial' = '#da42f5', 'annual perennial' = "#42b0f5", 'annual short_lived_perennial' = "green")
emu_pen_2012_PI %>%
drop_na(herbarium_determination) %>%
ggplot(aes(x = x, y = y, shape = family, color = most_common_lifeform)) +
geom_point() +
scale_shape_manual(values = c(1:19)) +
scale_color_manual(values = color_palette) +
theme_fivethirtyeight() +
labs(y = 'West (m)', x = 'South (m)')
color_palette <- c('annual' = 'red', 'perennial' = '#da42f5', 'annual perennial' = "#42b0f5", 'annual short_lived_perennial' = "#4ef542")
emu_pen_2012_PI %>%
drop_na(herbarium_determination) %>%
ggplot(aes(x = x, y = y, shape = family, color = most_common_lifeform)) +
geom_point() +
scale_shape_manual(values = c(1:19)) +
scale_color_manual(values = color_palette) +
theme_fivethirtyeight() +
labs(y = 'West (m)', x = 'South (m)')
emu_pen_2016_PI %>%
drop_na(herbarium_determination) %>%
ggplot(aes(x = x, y = y, shape = family, color = most_common_lifeform)) +
geom_point() +
scale_shape_manual(values = c(1:19)) +
scale_color_manual(values = color_palette) +
theme_fivethirtyeight() +
labs(y = 'West (m)', x = 'South (m)')
ggsave('maps_graphs/emu_ausplot_2016_lf.png', width = 10, height = 10, dpi = 320)
ggsave('maps_graphs/emu_ausplot_2012_lf.png', width = 10, height = 10, dpi = 320)
color_palette <- c('annual' = 'red', 'perennial' = '#da42f5', 'annual perennial' = "#42b0f5", 'annual short_lived_perennial' = "#4ef542", 'NA' = 'grey')
emu_pen_2012_PI %>%
drop_na(herbarium_determination) %>%
ggplot(aes(x = x, y = y, shape = family, color = most_common_lifeform)) +
geom_point() +
scale_shape_manual(values = c(1:19)) +
scale_color_manual(values = color_palette) +
theme_fivethirtyeight() +
labs(y = 'West (m)', x = 'South (m)')
ggsave('maps_graphs/emu_ausplot_2012_lf.png', width = 10, height = 10, dpi = 320)
emu_pen_2016_PI %>%
drop_na(herbarium_determination) %>%
ggplot(aes(x = x, y = y, shape = family, color = most_common_lifeform)) +
geom_point() +
scale_shape_manual(values = c(1:19)) +
scale_color_manual(values = color_palette) +
theme_fivethirtyeight() +
labs(y = 'West (m)', x = 'South (m)')
View(emu_pen_poly)
View(emu_pen_poly[[7]][[1]])
View(emu_pen_2012)
emu_pen_2016_PI <- emu_pen_2016$veg.PI
emu_pen_2016_PI <- emu_pen_2016_PI %>%
mutate(Direction = ifelse(substr(transect, 1, 1) %in% c('S', 'N'), "NS", "EW"))
emu_pen_2016_PI$x <- NA
emu_pen_2016_PI$y <- NA
emu_pen_2016_PI <- emu_pen_2016_PI %>%
mutate(
x = case_when(
Direction == 'EW' ~ point_number/100,
transect %in% c("S1-N1", "N2-S2", "S3-N3", "N4-S4", "S5-N5") ~
case_when(
transect == "S1-N1" ~ 0.10,
transect == "N2-S2" ~ 0.30,
transect == "S3-N3" ~ 0.50,
transect == "N4-S4" ~ 0.70,
transect == "S5-N5" ~ 0.90
),
TRUE ~ x  # Keep the existing 'x' value for other cases
),
y = case_when(
Direction == 'NS' ~ point_number/100,
transect %in% c("W1-E1", "E2-W2", "W3-E3", "E4-W4", "E5-W5") ~
case_when(
transect == "W1-E1" ~ 0.10,
transect == "E2-W2" ~ 0.30,
transect == "W3-E3" ~ 0.50,
transect == "E4-W4" ~ 0.70,
transect == "E5-W5" ~ 0.90
),
TRUE ~ y  # Keep the existing 'y' value for other cases
)
)
emu_pen_2016_PI <- emu_pen_2016_PI %>%
left_join(most_frequent_lifeform, by = c("herbarium_determination" = "taxon_name"))
emu_pen_2016_PI %>%
drop_na(herbarium_determination) %>%
ggplot(aes(x = x, y = y, shape = family, color = most_common_lifeform)) +
geom_point() +
scale_shape_manual(values = c(1:19)) +
scale_color_manual(values = color_palette) +
theme_fivethirtyeight() +
labs(y = 'West (m)', x = 'South (m)')
# Check for duplicates based on combinations of x and y values in columns 30 and 31
combined <- paste(df[, 30], df[, 31], sep = "_")  # Combine x and y values into a single string
# Check for duplicates based on combinations of x and y values in columns 30 and 31
combined <- paste(df[, 30], df[, 31], sep = "_")  # Combine x and y values into a single string
# Check for duplicates based on combinations of x and y values in columns 30 and 31
combined <- paste(emu_pen_2016_PI[, 30], emu_pen_2016_PI[, 31], sep = "_")  # Combine x and y values into a single string
# Check for duplicates based on the combined column
duplicate <- duplicated(combined) | duplicated(combined, fromLast = TRUE)
# Show rows where duplicates exist
duplicates <- df[df$duplicate == TRUE, ]
# Show rows where duplicates exist
duplicates <- duplicate[duplicate == TRUE, ]
# Show rows where duplicates exist
duplicates <- duplicate[duplicate == TRUE, ]
# Check for duplicates based on the combined column
duplicate <- as.data.frame(duplicated(combined) | duplicated(combined, fromLast = TRUE))
# Show rows where duplicates exist
duplicates <- duplicate[duplicate == TRUE, ]
View(duplicate)
library(sf)
library(ggplot2)
library(galah)
library(tidyverse)
library(austraits)
library(ggthemes)
library(here)
library(devtools)
install_github("ternaustralia/ausplotsR", build_vignettes = TRUE, dependencies = TRUE)
library(ausplotsR)
plots_oi <- c('NSABHC0009', 'NSABHC0010', 'NSABHC0011', 'NSABHC0012', 'NSABHC0028', 'NSABHC0029')
veg <- get_ausplots(plots_oi, veg.vouchers = T, veg.PI = T)
veg$site.info$visit_date
vegPI <- veg$veg.PI
vegveg <- veg$veg.vouch
View(vegveg)
unique(vegveg$herbarium_determination)
View(vegveg)
veg_count_by_plot <- vegveg %>%
group_by(site_unique) %>%
summarise(count = n())
View(veg_count_by_plot)
veg_count_by_plot <- vegveg %>%
group_by(site_unique) %>%
summarise(count = n()) %>%
arrange(desc(herbarium_determination))
veg_count_by_plot <- vegveg %>%
group_by(site_unique) %>%
summarise(count = n()) %>%
arrange(desc())
veg_count_by_plot <- vegveg %>%
group_by(site_unique) %>%
summarise(count = n()) %>%
arrange(descending)
veg_count_by_plot <- vegveg %>%
group_by(site_unique)
veg_count_by_plot <- vegveg %>%
group_by(site_unique)
unique(vegveg$herbarium_determination)
View(veg_count_by_plot)
View(vegveg)
veg_in_plots <- unique(vegveg$herbarium_determination)
veg_in_plots <- sort(unique(vegveg$herbarium_determination))
veg_in_plots
veg_in_plots <- vegveg %>%
group_by(herbarium_determination) %>%
summarize(site_unique = paste(unique(site_unique), collapse = ", ")) %>%
arrange(herbarium_determination) %>%
pull(herbarium_determination)
veg_in_plots <- vegveg %>%
group_by(herbarium_determination) %>%
summarize(site_unique = paste(unique(site_unique), collapse = ", ")) %>%
arrange(herbarium_determination) %>%
pull(herbarium_determination)
veg_in_plots <- vegveg %>%
group_by(herbarium_determination) %>%
summarize(site_unique = paste(unique(site_unique), collapse = ", ")) %>%
arrange(herbarium_determination)
View(veg_in_plots)
write.csv(veg_in_plots, 'data_out/veg_in_plots.csv')
View(vegPI)
unique(vegPI$growth_form)
unique(vegPI$substrate)
unique(veg$site.info$site_location_name) %>%
filter(site_unique == NSABHC009)
unique(veg$site.info$site_location_name) %>%
filter(site_unique == 'NSABHC009')
veg %>%
filter(site_unique == 'NSABHC009') %>%
unique(veg$site.info$site_location_name)
veg %>%
filter(site_unique == 'NSABHC009')
vegPI %>%
filter(site_unique == 'NSABHC009') %>%
unique(veg$site.info$site_location_name)
vegPI %>%
filter(site_unique == 'NSABHC009')
View(veg_in_plots)
ggplot() +
geom_sf(data = FG_area, fill = NA) +
geom_point(data = fowlers_veg, alpha = 0.6, color = 'grey50',
aes(x = decimalLongitude, y = decimalLatitude, fill = "ALA obs")) +
geom_point(data = FG_WG, size = 2, color = 'red',
aes(x = Longitude, y = Latitude, shape = Rainfall_Gauge)) +
geom_point(data = veg$site.info, size = 6, alpha = 0.6, shape = 15,
aes(x = longitude, y = latitude, color = site_location_name)) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white", color = 'white'),  # Set the panel background color to white
plot.background = element_rect(fill = "white", color = 'white'),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white", color = 'white')) +
scale_color_hue(labels = c('emu pen', 'NSABHC0010', 'sandstone', 'conservation', 'connors (mallee)', 'freislich (red gum)')) +
scale_fill_manual(labels = c("ALA observations"), values = c("grey50")) +
guides(fill = guide_legend(title = NULL),
shape = guide_legend(title = NULL)) +
labs(color = "ausplot site locations",
x = "",
y = "")
galah_config(email = 'adelegemmell@hotmail.com')
FG_area <- st_read('data/unsw-fowlers.kml')
fowlers_veg <- galah_call() |>
galah_identify("plantae") |>
galah_geolocate(FG_area) |>
atlas_occurrences()
select <- c(colnames(fowlers_veg)[1:8], "genus", "family")
fowlers_veg <- galah_call() |>
galah_identify("plantae") |>
galah_select(select) |>
galah_geolocate(FG_area) |>
atlas_occurrences()
fowlers_veg$year <- as.numeric(substr(fowlers_veg$eventDate, 1, 4))
fowlers_veg %>%
filter(year >= 1940) %>%
ggplot() +
geom_bar(aes(x = year, fill = family)) +
theme_classic() +
theme(legend.position = 'none')
#this was to download the ConR package - not using RN
install.packages("devtools")
devtools::install_github("gdauby/ConR")
library(ConR)
# downloaded threatened status of NSW/SA plants from https://www.environment.gov.au/sprat-public/action/report
threatflora <- read.csv('data/EPBC Threatened Flora plus SA.csv')
#create count df with counts of # records in ALA data
veg_count <- fowlers_veg %>%
group_by(scientificName) %>%
summarise(count = n())
#create count df with counts of # records in ausplot data
ausplot_counts <- vegPI %>%
group_by(herbarium_determination) %>%
summarise(count = n())
# find the matching conservation status for a given species name and status column (doesn't account for synonyms etc)
findConservationStatus <- function(species_name, status_column) {
matching_index <- which(species_name %in% threatflora$scientificName |
species_name %in% threatflora$EPBC_Name |
species_name %in% threatflora$NSW_Name |
species_name %in% threatflora$IUCN_Name |
species_name %in% threatflora$SA_Name)
if (length(matching_index) > 0) {
# If there is a match, return the corresponding conservation status from the specified column
return(threatflora[[status_column]][matching_index[1]])
} else {
# If no match is found, return NA or any default value
return(NA)
}
}
# create  new column for EPBC threat status
veg_count$EPBC_Status <- mapply(findConservationStatus, veg_count$scientificName, "EPBC_Status")
# create new column for NSW threat status
veg_count$NSW_Status <- mapply(findConservationStatus, veg_count$scientificName, "NSW_Status")
# create new column for IUCN threat status
veg_count$IUCN_Status <- mapply(findConservationStatus, veg_count$scientificName, "IUCN_Status")
# create new column for SA threat status
veg_count$SA_Status <- mapply(findConservationStatus, veg_count$scientificName, "SA_Status")
veg_count$SA <- mapply(findConservationStatus, veg_count$scientificName, "SA")
veg_count$NSW <- mapply(findConservationStatus, veg_count$scientificName, "NSW")
# create new column for EPBC threat status
ausplot_counts$EPBC_Status <- mapply(findConservationStatus, ausplot_counts$herbarium_determination, "EPBC_Status")
# create new column for NSW threat status
ausplot_counts$NSW_Status <- mapply(findConservationStatus, ausplot_counts$herbarium_determination, "NSW_Status")
# create new column for IUCN threat status
ausplot_counts$IUCN_Status <- mapply(findConservationStatus, ausplot_counts$herbarium_determination, "IUCN_Status")
# create new column for SA threat status
ausplot_counts$SA_Status <- mapply(findConservationStatus, ausplot_counts$herbarium_determination, "SA_Status")
# create new column for SA presence
ausplot_counts$SA <- mapply(findConservationStatus, ausplot_counts$herbarium_determination, "SA")
# create new column for SA presence
ausplot_counts$NSW <- mapply(findConservationStatus, ausplot_counts$herbarium_determination, "NSW")
library('austraits')
austraits <- load_austraits(version = "5.0.0", path = "intro/downloads")
#extract life history traits
annual_perennial_traits <- austraits %>% extract_trait('life_history')
#down with tibbles
annual_perennial_traits <- left_join(annual_perennial_traits[["traits"]], annual_perennial_traits[["taxa"]], by = "taxon_name")
#unique taxa with life history traits
length(unique(annual_perennial_traits$taxon_name))
#different life history values
unique(annual_perennial_traits$value)
annual_trait <- unique(annual_perennial_traits$value[grepl("annual", annual_perennial_traits$value)])
#number of records with 'annual' value
sum(annual_perennial_traits$value %in% annual_trait)
#records of annuals
annual_species_data <- subset(annual_perennial_traits, value %in% annual_trait)
annual_perennial_traits <- read.csv('data_out/life_form_traits.csv')
annual_species_data <- read.csv('data_out/annual_species.csv')
#vector containing names of all annual taxa from austraits
annual_species <- unique(annual_species_data$taxon_name)
#unique taxa with at least one record of annual life history form
length(unique(annual_species_data$taxon_name))
fowlers_veg$in_austraits_lf <- fowlers_veg$scientificName %in% annual_perennial_traits$taxon_name
fowlers_life_form <- annual_perennial_traits %>%
filter(taxon_name %in% fowlers_veg$scientificName |
taxon_name %in% ausplot_counts$herbarium_determination)
most_frequent_lifeform <- fowlers_life_form %>%
group_by(taxon_name) %>%
summarise(most_common_lifeform = names(sort(table(value), decreasing = TRUE))[1])
fowlers_veg <- fowlers_veg %>%
left_join(most_frequent_lifeform, by = c("scientificName" = "taxon_name"))
fowlers_veg <- fowlers_veg %>%
mutate(simp_lf = case_when(
grepl('annual', most_common_lifeform, ignore.case = TRUE) ~ 'annual',
grepl('perennial', most_common_lifeform, ignore.case = TRUE) ~ 'perennial',
TRUE ~ most_common_lifeform
))
vegPI <- vegPI %>%
left_join(most_frequent_lifeform, by = c("herbarium_determination" = "taxon_name"))
vegPI <- vegPI %>%
mutate(simp_lf = case_when(
grepl('annual', most_common_lifeform, ignore.case = TRUE) ~ 'annual',
grepl('perennial', most_common_lifeform, ignore.case = TRUE) ~ 'perennial',
TRUE ~ most_common_lifeform
))
#save csvs for ausplots/ALA + lifeform
write.csv(vegPI, 'data_out/ausplots_species_with_lifeform')
write.csv(fowlers_veg, 'data_out/ALA_FG_species_with_lifeform')
# Install and load necessary packages
install.packages("sp")
install.packages("rgdal")
library(sp)
library(rgdal)
FG_WG <- read.csv('data/FG_WG_locations.csv')
coordinates <- cbind(FG_WG$Northing, FG_WG$Easting)
crs <- CRS("+proj=utm +zone=54 +south +datum=WGS84")  # Replace with the appropriate CRS for your data
spatial_points <- SpatialPointsDataFrame(coordinates, FG_WG, proj4string = crs)
# Transform to WGS84 (latitude and longitude)
wgs84_crs <- CRS("+proj=longlat +datum=WGS84")
spatial_points_wgs84 <- spTransform(spatial_points, wgs84_crs)
# Extract latitude and longitude
FG_WG$Longitude <- coordinates(spatial_points_wgs84)[, 1]
FG_WG$Latitude <- coordinates(spatial_points_wgs84)[, 2]
FG_WG$Rainfall_Gauge <- "Rainfall Gauge"
ggplot() +
geom_sf(data = FG_area, fill = NA) +
geom_point(data = fowlers_veg, alpha = 0.6, color = 'grey50',
aes(x = decimalLongitude, y = decimalLatitude, fill = "ALA obs")) +
geom_point(data = FG_WG, size = 2, color = 'red',
aes(x = Longitude, y = Latitude, shape = Rainfall_Gauge)) +
geom_point(data = veg$site.info, size = 6, alpha = 0.6, shape = 15,
aes(x = longitude, y = latitude, color = site_location_name)) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white", color = 'white'),  # Set the panel background color to white
plot.background = element_rect(fill = "white", color = 'white'),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white", color = 'white')) +
scale_color_hue(labels = c('emu pen', 'NSABHC0010', 'sandstone', 'conservation', 'connors (mallee)', 'freislich (red gum)')) +
scale_fill_manual(labels = c("ALA observations"), values = c("grey50")) +
guides(fill = guide_legend(title = NULL),
shape = guide_legend(title = NULL)) +
labs(color = "ausplot site locations",
x = "",
y = "")
install.packages("devtools")
install.packages("devtools")
ggplot() +
geom_sf(data = FG_area, fill = NA) +
geom_point(data = fowlers_veg, alpha = 0.6, color = 'grey50',
aes(x = decimalLongitude, y = decimalLatitude, fill = "ALA obs")) +
geom_point(data = FG_WG, size = 2, color = 'red',
aes(x = Longitude, y = Latitude, shape = Rainfall_Gauge)) +
geom_point(data = veg$site.info, size = 6, alpha = 0.6, shape = 15,
aes(x = longitude, y = latitude, color = site_location_name)) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white", color = 'white'),  # Set the panel background color to white
plot.background = element_rect(fill = "white", color = 'white'),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white", color = 'white')) +
scale_color_hue(labels = c('emu pen', 'NSABHC0010', 'sandstone', 'conservation', 'connors (mallee)', 'freislich (red gum)')) +
scale_fill_manual(labels = c("ALA observations"), values = c("grey50")) +
guides(fill = guide_legend(title = NULL),
shape = guide_legend(title = NULL)) +
labs(color = "ausplot site locations",
x = "",
y = "")
ggsave('maps_graphs/fowlers_obs_map.png')
ggplot() +
geom_sf(data = FG_area, fill = NA) +
geom_point(data = fowlers_veg, alpha = 0.6, color = 'grey50',
aes(x = decimalLongitude, y = decimalLatitude, fill = "ALA obs")) +
geom_point(data = FG_WG, size = 2, color = 'red',
aes(x = Longitude, y = Latitude, shape = Rainfall_Gauge)) +
geom_point(data = veg$site.info, size = 6, alpha = 0.6, shape = 15,
aes(x = longitude, y = latitude, color = site_location_name)) +
theme_minimal() +
theme(panel.background = element_rect(fill = "white", color = 'white'),  # Set the panel background color to white
plot.background = element_rect(fill = "white", color = 'white'),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white", color = 'white')) +
scale_color_hue(labels = c('emu pen', 'emu grazed', 'sandstone', 'conservation', 'connors (mallee)', 'freislich (red gum)')) +
scale_fill_manual(labels = c("ALA observations"), values = c("grey50")) +
guides(fill = guide_legend(title = NULL),
shape = guide_legend(title = NULL)) +
labs(color = "ausplot site locations",
x = "",
y = "")
ggsave('maps_graphs/fowlers_obs_map.png')
library(sf)
library(ggplot2)
library(galah)
library(tidyverse)
library(austraits)
library(ggthemes)
library(here)
library(devtools)
install_github("ternaustralia/ausplotsR", build_vignettes = TRUE, dependencies = TRUE)
library(ausplotsR)
plots_oi <- c('NSABHC0009', 'NSABHC0010', 'NSABHC0011', 'NSABHC0012', 'NSABHC0028', 'NSABHC0029')
veg <- get_ausplots(plots_oi, veg.vouchers = T, veg.PI = T)
veg$site.info$visit_date
vegPI <- veg$veg.PI
vegveg <- veg$veg.vouch
View(vegveg)
veg_count_by_plot <- vegveg %>%
group_by(site_unique) %>%
summarise(count = n())
View(veg_count_by_plot)
