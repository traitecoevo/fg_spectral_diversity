geom_point(data = FG_WG,
aes(x = Longitude, y = Latitude)) +
scale_fill_manual(values = c("red", "orange", "green")) +
theme_minimal()
vegPI %>% filter(site_location_visit_id == 53607) |>
View()
# comparing rainfall to site visit dates ----------------------------------
ausplot_site_dates <- read.csv('data/FG_2022_visit/Fowlers_gap_summary_site_data.csv')
FG_daily_rainfall <- read.csv('data/fowlers_rainfall.csv')
FG_daily_rainfall$Short.Date <- as.Date(paste(FG_daily_rainfall$Year,
FG_daily_rainfall$Month,
FG_daily_rainfall$Day,
sep = "-"),
format = "%Y-%m-%d")
#pivot longer
ausplot_site_dates_long <- ausplot_site_dates %>%
pivot_longer(cols = c(Established.Date, Revisit.Date.1, Revisit.Date.2, Revisit.Date.3),
names_to = "Visit_Number",
values_to = "Visit_Date") %>%
filter(Visit_Date != "") %>%  # Remove rows with empty values in Visit_Date
arrange(Plot.Name, Visit_Date) %>%
mutate(Visit_Number = case_when(
str_detect(Visit_Number, "Established") ~ 1,
str_detect(Visit_Number, "Revisit.Date.1") ~ 2,
str_detect(Visit_Number, "Revisit.Date.2") ~ 3,
str_detect(Visit_Number, "Revisit.Date.3") ~ 4
))
#as.Date the date
ausplot_site_dates_long$Visit_Date <- as.Date(ausplot_site_dates_long$Visit_Date, format = "%d/%m/%Y")
ggplot() +
geom_point(data = ausplot_site_dates_long, aes(x = Visit_Date, y = 100, color = Plot.Name), size = 3, position = position_jitter(height = 25)) +
geom_line(data = FG_daily_rainfall[FG_daily_rainfall$Year >= 2012, ],
aes(x = Short.Date, y = Rainfall)) +
scale_x_date(date_labels = "%Y-%m-%d") +
scale_x_date(date_labels = "%Y-%m-%d", limits = c(as.Date("2012-01-01"), NA), date_breaks = "6 months") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(dplyr)
library(purrr)
# Assuming ausplot_site_dates_long is your main data frame
# Assuming FG_daily_rainfall is your rainfall data frame
# Function to calculate rainfall sum for previous n months
calculate_previous_rainfall <- function(visit_date, rainfall_data, n_months) {
end_date <- visit_date
start_date <- end_date %m-% months(n_months)
subset_data <- rainfall_data %>%
filter(Short.Date >= start_date, Short.Date <= end_date)
sum_rainfall <- sum(subset_data$Rainfall, na.rm = TRUE)
return(sum_rainfall)
}
# Calculate rainfall for previous 1, 3, 6, and 12 months
ausplot_site_dates_long <- ausplot_site_dates_long %>%
mutate(
Rainfall_1_month = pmap_dbl(list(Visit_Date, list(FG_daily_rainfall), 1), calculate_previous_rainfall),
Rainfall_3_months = pmap_dbl(list(Visit_Date, list(FG_daily_rainfall), 3), calculate_previous_rainfall),
Rainfall_6_months = pmap_dbl(list(Visit_Date, list(FG_daily_rainfall), 6), calculate_previous_rainfall),
Rainfall_12_months = pmap_dbl(list(Visit_Date, list(FG_daily_rainfall), 12), calculate_previous_rainfall)
)
# Print the resulting data frame
print(ausplot_site_dates_long)
# Given date
given_date <- as.Date("2024-02-01", format = "%Y-%m-%d")
# Calculate rainfall for previous 1, 3, 6, and 12 months
rainfall_for_given_date <- data.frame(
Date = given_date,
Rainfall_1_month = calculate_previous_rainfall(given_date, FG_daily_rainfall, 1),
Rainfall_3_months = calculate_previous_rainfall(given_date, FG_daily_rainfall, 3),
Rainfall_6_months = calculate_previous_rainfall(given_date, FG_daily_rainfall, 6),
Rainfall_12_months = calculate_previous_rainfall(given_date, FG_daily_rainfall, 12)
)
# Function to calculate the number of days with rainfall greater than 0 for previous n months
calculate_previous_rainfall_days <- function(end_date, rainfall_data, n_months) {
start_date <- end_date %m-% months(n_months)
subset_data <- rainfall_data %>%
filter(Short.Date >= start_date, Short.Date <= end_date, Rainfall > 0)
num_rainfall_days <- nrow(subset_data)
return(num_rainfall_days)
}
# Calculate number of rainfall days for each visit
ausplot_site_dates_long <- ausplot_site_dates_long %>%
mutate(
RainfallDays_1_month = map_int(Visit_Date, ~ calculate_previous_rainfall_days(.x, FG_daily_rainfall, 1)),
RainfallDays_3_months = map_int(Visit_Date, ~ calculate_previous_rainfall_days(.x, FG_daily_rainfall, 3)),
RainfallDays_6_months = map_int(Visit_Date, ~ calculate_previous_rainfall_days(.x, FG_daily_rainfall, 6)),
RainfallDays_12_months = map_int(Visit_Date, ~ calculate_previous_rainfall_days(.x, FG_daily_rainfall, 12))
)
ggplot(ausplot_site_dates_long, aes(x = Plot.Name, y = Rainfall_1_month, fill = as.factor(Visit_Date))) +
geom_col(position = "dodge") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Reshape the data for facet_wrap
ausplot_site_dates_long_long <- pivot_longer(
ausplot_site_dates_long,
cols = c(Rainfall_1_month, Rainfall_3_months, Rainfall_6_months, Rainfall_12_months),
names_to = "Rainfall_Type",
values_to = "Rainfall"
)
# Create the plot
ggplot(ausplot_site_dates_long_long, aes(x = Plot.Name, y = Rainfall, fill = as.factor(Visit_Date))) +
geom_col(position = "dodge") +
facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 2) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(fill = 'Visit Date')
# Reshape the data for facet_wrap
ausplot_site_dates_long_long <- pivot_longer(
ausplot_site_dates_long,
cols = c(Rainfall_1_month, Rainfall_3_months, Rainfall_6_months, Rainfall_12_months,
RainfallDays_1_month, RainfallDays_3_months, RainfallDays_6_months, RainfallDays_12_months),
names_to = "Rainfall_Type",
values_to = "Rainfall"
)
ausplot_site_dates_long_long$Rainfall_Type <- factor(
ausplot_site_dates_long_long$Rainfall_Type,
levels = c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
ordered = TRUE
)
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
#facet_wrap(~ str_replace_all(Rainfall_Type, "_", " "), scales = "free_y", nrow = 2, ncol = 4) +
facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
ggsave('maps_graphs/rainfall_sample_dates.png', height = 5, width = 10)
install.packages("devtools")
install.packages("devtools")
order <- c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months")
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
#facet_wrap(~ str_replace_all(Rainfall_Type, "_", " "), scales = "free_y", nrow = 2, ncol = 4) +
facet_wrap(~ factor(str_replace_all(Rainfall_Type, "_", " "), levels = desired_order), scales = "free_y", nrow = 2, ncol = 4) +
#facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
#facet_wrap(~ str_replace_all(Rainfall_Type, "_", " "), scales = "free_y", nrow = 2, ncol = 4) +
facet_wrap(~ factor(str_replace_all(Rainfall_Type, "_", " "), levels = order), scales = "free_y", nrow = 2, ncol = 4) +
#facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
#facet_wrap(~ str_replace_all(Rainfall_Type, "_", " "), scales = "free_y", nrow = 2, ncol = 4) +
facet_wrap(~ factor(str_replace_all(Rainfall_Type, "_", " "), levels = order), scales = "free_y", nrow = 2, ncol = 4) +
#facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
#facet_wrap(~ str_replace_all(Rainfall_Type, "_", " "), scales = "free_y", nrow = 2, ncol = 4) +
facet_wrap(~ factor(str_replace_all(Rainfall_Type, "_", " "), levels = order), scales = "free_y", nrow = 2, ncol = 4) +
#facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
facet_wrap(~ str_replace_all(Rainfall_Type, "_", " "), levels = order scales = "free_y", nrow = 2, ncol = 4) +
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
#facet_wrap(~ str_replace_all(Rainfall_Type, "_", " "), levels = order scales = "free_y", nrow = 2, ncol = 4) +
#facet_wrap(~ factor(str_replace_all(Rainfall_Type, "_", " "), levels = order), scales = "free_y", nrow = 2, ncol = 4) +
facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
ggsave('maps_graphs/rainfall_sample_dates.png', height = 5, width = 10)
library(stringr)  # Load the stringr package if not already loaded
ausplot_site_dates_long_long$Rainfall_Type <- factor(
ausplot_site_dates_long_long$Rainfall_Type <- factor(
ausplot_site_dates_long_long$Rainfall_Type <- factor(
ausplot_site_dates_long_long$Rainfall_Type,
levels = c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
labels = str_replace_all(c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
c("_" = " ", "Rainfall" = "Rainfall (mm)"), fixed(c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months")),
ordered = TRUE
)
ausplot_site_dates_long_long$Rainfall_Type <- factor(
ausplot_site_dates_long_long$Rainfall_Type <- factor(ausplot_site_dates_long_long$Rainfall_Type,
library(stringr)  # Load the stringr package if not already loaded
# Define custom labels for each facet
custom_labels <- c(
# Define custom labels for each facet
custom_labels <- c(
"Rainfall (mm) 1 month" = "Rainfall_1_month",
"Rainfall (mm) 3 months" = "Rainfall_3_months",
"Rainfall (mm) 6 months" = "Rainfall_6_months",
"Rainfall (mm) 12 months" = "Rainfall_12_months",
"RainfallDays 1 month" = "RainfallDays_1_month",
"RainfallDays 3 months" = "RainfallDays_3_months",
"RainfallDays 6 months" = "RainfallDays_6_months",
"RainfallDays 12 months" = "RainfallDays_12_months"
)
ausplot_site_dates_long_long$Rainfall_Type <- factor(
ausplot_site_dates_long_long$Rainfall_Type,
levels = c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
labels = str_replace_all(c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
c("_" = " ", "Rainfall" = "Rainfall (mm)")),
ordered = TRUE
)
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4, labeller = labeller(Rainfall_Type = custom_labels)) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
ggsave('maps_graphs/rainfall_sample_dates.png', height = 5, width = 10)
# Define custom labels for each facet
custom_labels <- c(
"Rainfall (mm) 1 month" = "Rainfall_1_month",
"Rainfall (mm) 3 months" = "Rainfall_3_months",
"Rainfall (mm) 6 months" = "Rainfall_6_months",
"Rainfall (mm) 12 months" = "Rainfall_12_months",
"RainfallDays 1 month" = "RainfallDays_1_month",
"RainfallDays 3 months" = "RainfallDays_3_months",
"RainfallDays 6 months" = "RainfallDays_6_months",
"RainfallDays 12 months" = "RainfallDays_12_months"
)
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4, labeller = labeller(Rainfall_Type = custom_labels)) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
ausplot_site_dates_long_long$Rainfall_Type <- factor(
ausplot_site_dates_long_long$Rainfall_Type,
levels = c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
labels = str_replace_all(c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
c("_" = " ")),
ordered = TRUE
)
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
ausplot_site_dates_long_long$Rainfall_Type <- factor(
ausplot_site_dates_long_long$Rainfall_Type,
levels = c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
labels = str_replace_all(c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
c("_" = " ", "Rainfall" = "Rainfall (mm)")),
ordered = TRUE
)
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
ausplot_site_dates_long_long$Rainfall_Type <- factor(
ausplot_site_dates_long_long$Rainfall_Type,
levels = c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
labels = str_replace_all(c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
c("_" = " ", "Rainfall" = "Rainfall (mm)")),
ordered = TRUE
)
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
# Reshape the data for facet_wrap
ausplot_site_dates_long_long <- pivot_longer(
ausplot_site_dates_long,
cols = c(Rainfall_1_month, Rainfall_3_months, Rainfall_6_months, Rainfall_12_months,
RainfallDays_1_month, RainfallDays_3_months, RainfallDays_6_months, RainfallDays_12_months),
names_to = "Rainfall_Type",
values_to = "Rainfall"
)
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
ausplot_site_dates_long_long$Rainfall_Type <- factor(
ausplot_site_dates_long_long$Rainfall_Type,
levels = c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
labels = str_replace_all(c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
c("_" = " ", "Rainfall" = "Rainfall (mm)")),
ordered = TRUE
)
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
ausplot_site_dates_long_long$Rainfall_Type <- factor(
ausplot_site_dates_long_long$Rainfall_Type,
levels = c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
labels = ifelse(
ausplot_site_dates_long_long$Rainfall_Type %in% c("Rainfall_1_month", "Rainfall_3_months",
"Rainfall_6_months", "Rainfall_12_months"),
paste0("Rainfall (mm)", substring(ausplot_site_dates_long_long$Rainfall_Type, 9)),
gsub("_", " ", ausplot_site_dates_long_long$Rainfall_Type)
),
ordered = TRUE
)
# Define custom labels based on Rainfall_Type
custom_labels <- function(x) {
ifelse(
grepl("^Rainfall_", x),
gsub("^(Rainfall_[0-9]+_months)$", "Rainfall (mm) \\1", x),
gsub("_", " ", x)
)
}
ausplot_site_dates_long_long$Rainfall_Type <- factor(
ausplot_site_dates_long_long$Rainfall_Type,
levels = c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
labels = custom_labels,
ordered = TRUE
)
ausplot_site_dates_long_long %>%
filter(!(Plot.Name %in% c('NSABHC0028', 'NSABHC0029'))) %>%
ggplot(aes(x = Plot.Name, y = Rainfall, fill = as.factor(substr(Visit_Date, 1, 4)))) +
geom_col(position = "dodge") +
facet_wrap(~ Rainfall_Type, scales = "free_y", nrow = 2, ncol = 4) +
scale_fill_manual(values = c("#169c9c", "#b39eb5", "#9ec35d", "#f08080")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill = "white"),  # Set the panel background color to white
plot.background = element_rect(fill = "white"),   # Set the overall plot background color to white
legend.background = element_rect(fill = "white")
) +
labs(fill = 'Visit Year', x = 'Site Name')
ausplot_site_dates_long_long$Rainfall_Type <- factor(
ausplot_site_dates_long_long$Rainfall_Type,
levels = c("Rainfall_1_month", "Rainfall_3_months", "Rainfall_6_months", "Rainfall_12_months",
"RainfallDays_1_month", "RainfallDays_3_months", "RainfallDays_6_months", "RainfallDays_12_months"),
labels = custom_labels,
ordered = TRUE
)
vegPI %>%
filter(site_location_visit_id == 53604) %>% #emu pen visit
drop_na(herbarium_determination) %>%
ggplot(aes(x = X_plot, y = Y_plot, shape = family, color = family)) +
geom_point() +
scale_shape_manual(values = c(1:19)) +
theme_classic() +
labs(y = 'West (m)', x = 'South (m)')
??galah_select()
help(galah_select())
??galah_select
fowlers_veg <- galah_call() |>
galah_identify("plantae") |>
galah_geolocate(FG_area) |>
galah_select(genus, family, group = 'basic') |>
atlas_occurrences()
View(fowlers_veg)
install.packages("APC")
install.packages("apc")
library(apc)
install.packages("APCalign")
library(APCalign)
install.packages("remotes")
install.packages("remotes")
remotes::install_github("traitecoevo/APCalign")
install.packages("remotes")
install.packages("remotes")
remotes::install_github("traitecoevo/APCalign")
install.packages("remotes")
install.packages("remotes")
remotes::install_github("traitecoevo/APCalign")
rm(list = ls())
resources <- load_taxonomic_resources()
library(APCalign)
remotes::install_github("traitecoevo/APCalign")
